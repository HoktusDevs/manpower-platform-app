service: config-service

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cloudformation:DescribeStacks
        - cloudformation:ListStacks
      Resource: "*"

functions:
  # Frontend Config
  getFrontendConfig:
    handler: src/handlers/config.getFrontendConfig
    events:
      - http:
          path: /config
          method: get
          cors: true
      - http:
          path: /config.js
          method: get
          cors: true

  # Health Check
  healthCheck:
    handler: src/handlers/health.checkHealth
    events:
      - http:
          path: /health
          method: get
          cors: true

resources:
  Resources:
    # CloudFront Distribution for Config
    ConfigCloudFront:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Comment: Frontend Config Distribution
          DefaultCacheBehavior:
            TargetOriginId: ConfigServiceOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingDisabled
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # AllViewer
          Origins:
            - Id: ConfigServiceOrigin
              DomainName:
                Fn::Join:
                  - ""
                  - - Ref: RestApiApigEvent
                    - ".execute-api."
                    - ${self:provider.region}
                    - ".amazonaws.com"
              OriginPath: "/${self:provider.stage}"
              CustomOriginConfig:
                HTTPPort: 443
                OriginProtocolPolicy: https-only
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /config
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /config

  Outputs:
    ConfigServiceUrl:
      Description: Config Service URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: RestApiApigEvent
            - ".execute-api."
            - ${self:provider.region}
            - ".amazonaws.com/"
            - ${self:provider.stage}
      Export:
        Name: ConfigServiceUrl-${self:provider.stage}

    ConfigCloudFrontUrl:
      Description: CloudFront URL for Config
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Fn::GetAtt: [ConfigCloudFront, DomainName]
      Export:
        Name: ConfigCloudFrontUrl-${self:provider.stage}

    ConfigCloudFrontDomain:
      Description: CloudFront Domain for embedding in frontend
      Value:
        Fn::GetAtt: [ConfigCloudFront, DomainName]
      Export:
        Name: ConfigCloudFrontDomain-${self:provider.stage}

plugins:
  - serverless-plugin-typescript